AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for deploying an EC2 instance with NVIDIA NIM container, ALB, VPC, and Route53 record'

Parameters:
  InstanceType:
    Type: String
    Default: g5.12xlarge
    Description: EC2 instance type for NIM
    AllowedValues:
      - p5.48xlarge
      - g5.xlarge
      - g5.2xlarge
      - g5.4xlarge
      - g5.8xlarge
      - g5.16xlarge
      - g5.12xlarge
      - g5.24xlarge
      - g5.48xlarge

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance

  DomainName:
    Type: String
    Description: Domain name for the ALB (e.g., nim.example.com)

  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: Route 53 Hosted Zone ID

  VpcId:
    Type: String
    Default: ''
    Description: Optional - Existing VPC ID. Leave blank to create a new VPC.

  SubnetIds:
    Type: CommaDelimitedList
    Default: ''
    Description: Optional - Existing Subnet IDs. Leave blank to create new subnets.

  Repository:
    Type: String
    Default: meta/llama-3.1-8b-instruct
    Description: NGC repository for the NIM container

  LatestTag:
    Type: String
    Default: 1.1.2
    Description: Latest tag for the NIM container

  NGCApiKeySecretName:
    Type: String
    Description: Name of the Secrets Manager secret containing the NGC API Key
    Default: NGCApiKey

  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id'
    Description: SSM parameter for the latest Ubuntu 22.04 LTS AMI ID

  CapacityReservationId:
    Type: String
    Description: Optional - ID of the Capacity Reservation to use. Leave blank to not use a Capacity Reservation.
    Default: ''

  S3BucketName:
    Type: String
    Description: Name of the S3 bucket containing nested stack templates

  PlacementGroupName:
    Type: String
    Description: Optional - Name of the placement group for high-performance networking
    Default: ''

Conditions:
  ShouldCreateVpc: !Equals [!Ref VpcId, '']
  ShouldCreateSubnets: !Equals [!Join [',', !Ref SubnetIds], '']

Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/vpc-stack.yaml
      Parameters:
        CreateVpc: !If [ShouldCreateVpc, 'true', 'false']
        CreateSubnets: !If [ShouldCreateSubnets, 'true', 'false']
        VpcId: !If [ShouldCreateVpc, 'NONE', !Ref VpcId]
        SubnetIds: !If [ShouldCreateSubnets, 'NONE', !Join [',', !Ref SubnetIds]]

  ALBStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: VPCStack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/alb-stack.yaml
      Parameters:
        VpcId: !GetAtt VPCStack.Outputs.VpcId
        SubnetIds: !GetAtt VPCStack.Outputs.SubnetIds
        DomainName: !Ref DomainName
        HostedZoneId: !Ref HostedZoneId

  EC2Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn: ALBStack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/ec2-stack.yaml
      Parameters:
        VpcId: !GetAtt VPCStack.Outputs.VpcId
        SubnetId: !Select [0, !Split [',', !GetAtt VPCStack.Outputs.SubnetIds]]
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
        Repository: !Ref Repository
        LatestTag: !Ref LatestTag
        NGCApiKeySecretName: !Ref NGCApiKeySecretName
        CapacityReservationId: !Ref CapacityReservationId
        LatestAmiId: !Ref LatestAmiId
        ALBTargetGroupArn: !GetAtt ALBStack.Outputs.ALBTargetGroupArn
        PlacementGroupName: !Ref PlacementGroupName

  LinkStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - ALBStack
      - EC2Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/link-stack.yaml
      Parameters:
        ALBTargetGroupArn: !GetAtt ALBStack.Outputs.ALBTargetGroupArn
        ALBSecurityGroupId: !GetAtt ALBStack.Outputs.ALBSecurityGroupId
        EC2SecurityGroupId: !GetAtt EC2Stack.Outputs.EC2SecurityGroupId

Outputs:
  ALBDNSName:
    Description: DNS name of the Application Load Balancer
    Value: !GetAtt ALBStack.Outputs.ALBDNSName
  DomainName:
    Description: Domain name for accessing the NIM
    Value: !Ref DomainName